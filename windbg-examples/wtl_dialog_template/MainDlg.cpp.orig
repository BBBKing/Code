// MainDlg.cpp : implementation of the CMainDlg class
//
/////////////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include "resource.h"

#include "MainDlg.h"



LRESULT CMainDlg::OnInitDialog(UINT /*uMsg*/, WPARAM /*wParam*/, LPARAM /*lParam*/, BOOL& /*bHandled*/)
{
    // center the dialog on the screen
    CenterWindow();
    // set icons
    HICON hIcon = (HICON)::LoadImage(_Module.GetResourceInstance(), MAKEINTRESOURCE(IDR_MAINFRAME),
                                     IMAGE_ICON, ::GetSystemMetrics(SM_CXICON), ::GetSystemMetrics(SM_CYICON), LR_DEFAULTCOLOR);
    SetIcon(hIcon, TRUE);
    HICON hIconSmall = (HICON)::LoadImage(_Module.GetResourceInstance(), MAKEINTRESOURCE(IDR_MAINFRAME),
                                          IMAGE_ICON, ::GetSystemMetrics(SM_CXSMICON), ::GetSystemMetrics(SM_CYSMICON), LR_DEFAULTCOLOR);
    SetIcon(hIconSmall, FALSE);
    return TRUE;
}

LRESULT CMainDlg::OnAppAbout(WORD /*wNotifyCode*/, WORD /*wID*/, HWND /*hWndCtl*/, BOOL& /*bHandled*/)
{
    CSimpleDialog<IDD_ABOUTBOX, FALSE> dlg;
    dlg.DoModal();
    return 0;
}

LRESULT CMainDlg::OnOK(WORD /*wNotifyCode*/, WORD wID, HWND /*hWndCtl*/, BOOL& /*bHandled*/)
{
    // TODO: Add validation code
    EndDialog(wID);
    return 0;
}

LRESULT CMainDlg::OnCancel(WORD /*wNotifyCode*/, WORD wID, HWND /*hWndCtl*/, BOOL& /*bHandled*/)
{
    EndDialog(wID);
    return 0;
}


UINT __stdcall CallMiniSite(void* lParam)
{
	::MessageBoxW(NULL, L"hello", L"form thread", MB_OK);

	HANDLE hFile=CreateFile("C:\\a.txt",
		GENERIC_WRITE|GENERIC_READ,
		0,
		NULL,
		OPEN_ALWAYS,
		FILE_ATTRIBUTE_NORMAL,
		NULL);
	if (hFile == INVALID_HANDLE_VALUE) 
	{
		return ;
	}
	char Buffer[]={"abcdefghijklemn"};
	DWORD dwReturn;
	WriteFile(hFile,Buffer,strlen(Buffer),&dwReturn,NULL);

	CloseHandle(hFile);

	return 0;
}


LRESULT CMainDlg::OnBnClickedButton1(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL& bHandled)
{
    TRACE_MSGBOX_A("hello world!");
    typedef void WINAPI F_Hello1();
    F_Hello1* Hello1 = NULL;
    HMODULE dllHandle = NULL;
    // try to load the DLL
    dllHandle = ::LoadLibrary(L"dll-template-mt.dll");

    if (dllHandle) {
        Hello1 = (F_Hello1*)::GetProcAddress(dllHandle, "Hello1");
        if (Hello1) {
			Hello1();
        }
    }

    if (dllHandle != NULL) {
        ::FreeLibrary(dllHandle);
        dllHandle = NULL;
    }


	HANDLE hThread = (HANDLE)_beginthreadex(NULL, 1024 * 1024 * 2, CallMiniSite, NULL, 0, NULL);
	if (hThread) {
		SetThreadPriority(hThread, THREAD_PRIORITY_BELOW_NORMAL);
		CloseHandle(hThread);
		hThread = NULL;
	}

    return 0;
}
