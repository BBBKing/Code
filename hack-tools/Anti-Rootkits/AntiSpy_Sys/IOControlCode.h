#ifndef CXX_IOCONTROLCODE_H
#define CXX_IOCONTROLCODE_H


#define DEVICE_NAME             L"\\Device\\AntiSpyDevice"
#define LINK_NAME 	            L"\\DosDevices\\AntiSpyDeviceLinkName"


#define IOCTL_ENUMPROCESSINFOR \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x830,METHOD_NEITHER,FILE_ANY_ACCESS) //进程信息

#define CTL_ENUMPROCESSMODULE \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x831,METHOD_NEITHER,FILE_ANY_ACCESS)  //进程模块

#define IOCTL_ENUMHIDEPROCESSINFOR \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x832,METHOD_NEITHER,FILE_ANY_ACCESS)  //隐藏进程信息

#define CTL_KILLPROCESS \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x833,METHOD_NEITHER,FILE_ANY_ACCESS)  //关闭进程

#define CTL_KILLPROCESS_AND_FILE \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x836,METHOD_NEITHER,FILE_ANY_ACCESS)  //关闭进程并且删除文件

#define CTL_FORCE_KILL_PROCESS \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x847,METHOD_NEITHER,FILE_ANY_ACCESS)  //强制关闭进程

#define CTL_ENUMPROCESSHANDLE \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x834,METHOD_NEITHER,FILE_ANY_ACCESS)  //进程句柄

#define CTL_KILLPROCESSHANDLE \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x835,METHOD_NEITHER,FILE_ANY_ACCESS)  //关闭句柄

#define CTL_ENUMPROCESSTHREAD \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x837,METHOD_NEITHER,FILE_ANY_ACCESS)  //进程线程

#define CTL_ENUMPROCESSMEMORY \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x838,METHOD_NEITHER,FILE_ANY_ACCESS)  //进程内存

#define CTL_MODIFYROCESSMEMORYPROTECT \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x839,METHOD_NEITHER,FILE_ANY_ACCESS) //修改保护属性

#define CTL_READROCESSMEMORY \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x840,METHOD_NEITHER,FILE_ANY_ACCESS) //读进程内存


#define CTL_KILLPROCESSTHREAD \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x842,METHOD_NEITHER,FILE_ANY_ACCESS)  //结束线程

#define CTL_FORCEKILLPROCESSTHREAD \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x843,METHOD_NEITHER,FILE_ANY_ACCESS)  //强杀线程

#define CTL_SUSPENDPROCESSTHREAD \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x844,METHOD_NEITHER,FILE_ANY_ACCESS)  //挂起线程

#define CTL_RESUMEPROCESSTHREAD \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x845,METHOD_NEITHER,FILE_ANY_ACCESS)  //恢复线程


#define CTL_JUDGETHREADSUSPEND \
	CTL_CODE(FILE_DEVICE_UNKNOWN,0x846,METHOD_NEITHER,FILE_ANY_ACCESS)  //判断线程是否挂起

#endif